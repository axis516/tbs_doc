
// Служебные процедуры и функции
#Область СлужебныеПроцедурыИФункции

Функция СформироватьОтчет() Экспорт
	
	Результат.Очистить();
	
	ТЗ = СформироватьШаблон();
	
	НомерСтроки = 2;
	
	Линия  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
	мШрифт = Новый Шрифт(,,12,Ложь,Ложь , ,, );
	
	Для Каждого мСтрока Из ТЗ Цикл
		
		НомерСтроки = 2;
		РезультатЗапроса = СформироватьВыборкуПоЗаявкам(мСтрока.Статус);
		Если РезультатЗапроса.Пустой() Тогда
			ТекущаяОбласть = Результат.Область(НомерСтроки,мСтрока.Колонка);
			АвтоНастройкаОбласти(ТекущаяОбласть,Линия,мШрифт);
			ТекущаяОбласть.Параметр = Строка(мСтрока.Статус);
			НомерСтроки = НомерСтроки + 1;
		Иначе
			СформироватьРезультатЗапроса(РезультатЗапроса,мСтрока,НомерСтроки,Линия,мШрифт);	
		КонецЕсли; 
		
		
	КонецЦикла;

КонецФункции

Функция СформироватьШаблон()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТБС_СтатусыЗаявкиIT.Ссылка,
	|	ТБС_СтатусыЗаявкиIT.Порядок КАК Порядок
	|ИЗ
	|	Перечисление.ТБС_СтатусыЗаявкиIT КАК ТБС_СтатусыЗаявкиIT
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Статус");
	ТЗ.Колонки.Добавить("Колонка");
	
	Колонка = 2;
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока					= ТЗ.Добавить();
		НоваяСтрока.Статус			= Выборка.Ссылка;	
		НоваяСтрока.Колонка         = Колонка;

		Колонка = Колонка + 1;
		
	КонецЦикла; 
	
	Возврат ТЗ;
	
КонецФункции

Функция СформироватьВыборкуПоЗаявкам(Статус)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТБС_ЗаявкиIT.Статус,
	|	ТБС_ЗаявкиIT.Ссылка,
	|	ТБС_ЗаявкиIT.Пользователь,
	|	ТБС_ЗаявкиIT.Система,
	|	ТБС_ЗаявкиIT.Категория,
	|	ТБС_ЗаявкиIT.Исполнитель,
	|	ТБС_ЗаявкиIT.Важность,
	|	ТБС_ЗаявкиIT.Дата КАК Дата,
	|	ТБС_ЗаявкиIT.ВыполнитьДо,
	|	1 КАК Количество
	|ИЗ
	|	Документ.ТБС_ЗаявкиIT КАК ТБС_ЗаявкиIT
	|ГДЕ
	|	ТБС_ЗаявкиIT.Статус = &Статус
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	ОБЩИЕ
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("Статус",     Статус);
	Запрос.УстановитьПараметр("Исполнитель",Исполнитель);
	Если ЗначениеЗаполнено(Исполнитель) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ТБС_ЗаявкиIT.Статус = &Статус",
		" ТБС_ЗаявкиIT.Статус = &Статус И ТБС_ЗаявкиIT.Исполнитель = &Исполнитель");
	КонецЕсли; 
	РезультатЗапроса = Запрос.Выполнить();
	 
	Возврат РезультатЗапроса;
	
КонецФункции

Функция СформироватьРезультатЗапроса(РезультатЗапроса,мСтрока,НомерСтроки,Линия,мШрифт)
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекущаяОбласть = Результат.Область(НомерСтроки,мСтрока.Колонка);
		
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
			
			Текст = Строка(мСтрока.Статус) + " (" + Строка(Выборка.Количество) + ")";
			АвтоНастройкаОбласти(ТекущаяОбласть,Линия,мШрифт);
			
		Иначе
			Текст = Формат(Выборка.Дата,"ДФ=dd.MM.yyyy") + Символы.ПС
			+ "Важность:" + Строка(Выборка.Важность) + Символы.ПС
			+ "Система: " + Строка(Выборка.Система) + Символы.ПС
			+ "Категория: " + Строка(Выборка.Категория) + Символы.ПС
			+ "Исполнитель: " + Строка(Выборка.Исполнитель) + Символы.ПС
			+ "Выполнить до: " + Формат(Выборка.ВыполнитьДо,"ДФ=dd.MM.yyyy");
			
			АвтоНастройкаОбласти(ТекущаяОбласть,Линия,Неопределено);

		КонецЕсли; 
		
		ТекущаяОбласть.Параметр 		   = Текст;
		ТекущаяОбласть.Расшифровка         = Выборка.Ссылка;
		ТекущаяОбласть.ПараметрРасшифровки = Выборка.Ссылка;
		//ТекущаяОбласть.ПараметрКартинки    = БиблиотекаКартинок.ВажностьВысокая;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла; 
	
КонецФункции

Функция АвтоНастройкаОбласти(ТекущаяОбласть,Линия,мШрифт)
	
	ТекущаяОбласть.ШиринаКолонки	= 24;
	ТекущаяОбласть.РазмещениеТекста	= ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ТекущаяОбласть.ГраницаСверху	= Линия; 
	ТекущаяОбласть.ГраницаСнизу		= Линия; 
	ТекущаяОбласть.ГраницаСправа	= Линия; 
	ТекущаяОбласть.ГраницаСлева		= Линия; 
	ТекущаяОбласть.Шрифт			= мШрифт;
	Если мШрифт <> Неопределено Тогда
		ТекущаяОбласть.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;	
	Иначе
		ТекущаяОбласть.ЦветФона = WebЦвета.Лимонный;
	КонецЕсли; 
	
КонецФункции

#КонецОбласти